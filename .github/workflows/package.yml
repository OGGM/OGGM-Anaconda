name: Conda
on:
  push: []
  schedule:
    - cron: '0 4 * * 1'

defaults:
  run:
    shell: bash

jobs:
  packages:
    name: Build Packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Conda
        run: ./ci/setup-conda.sh
      - name: Build Pytest-Mpl
        run: ./ci/build-package.sh pytest-mpl
        env:
          ANACONDA_AUTH_TOKEN: ${{ secrets.ANACONDA_AUTH_TOKEN }}
      - name: Build oggm-deps
        run: ./ci/build-package.sh oggm-deps
        env:
          ANACONDA_AUTH_TOKEN: ${{ secrets.ANACONDA_AUTH_TOKEN }}
      - name: Build oggm
        run: ./ci/build-package.sh oggm
        env:
          ANACONDA_AUTH_TOKEN: ${{ secrets.ANACONDA_AUTH_TOKEN }}
      - name: Build oggmdev
        run: ./ci/build-package.sh oggmdev
        env:
          ANACONDA_AUTH_TOKEN: ${{ secrets.ANACONDA_AUTH_TOKEN }}
  envs:
    name: Build Envs
    needs: packages
    strategy:
      fail-fast: false
      matrix:
        pkg: [oggm, oggmdev]
        python: ["3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ contains(matrix.os, 'windows') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Conda
        run: ./ci/setup-conda.sh
      - name: Make Env
        run: ./ci/make-env.sh
        env:
          DEPLOY_KEY: ${{ secrets.DEP_LIST_DEPLOY_KEY }}
          PKG: ${{ matrix.pkg }}
          PYVER: ${{ matrix.python }}
